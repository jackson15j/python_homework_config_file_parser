# https://taskfile.dev
version: 3

output: prefixed

tasks:
  create-venv:
    summary: Use default system python version to create a virtual env.
    cmds:
      - python -m venv .venv

  activate-venv:
    summary: Activate the package's virtual env.
    cmds:
      - source .venv/bin/activate

  install-deps:
    summary: Install the dependencies for the package.
    deps: [activate-venv]
    cmds:
      - pip install .

  install-build-deps:
    summary: Install the optional building dependencies for the package.
    deps: [activate-venv]
    cmds:
      - pip install .[build]

  install-lint-deps:
    summary: Install the optional linting dependencies for the package.
    deps: [activate-venv]
    cmds:
      - pip install .[lint]

  install-test-deps:
    summary: Install the optional testing dependencies for the package.
    deps: [activate-venv]
    cmds:
      - pip install .[test]

  lint:
    summary: Run all of the linters agasint the package.
    deps: [activate-venv]
    cmds:
      - pycodestyle .
      - flake8 .
      - black . --check --diff
      - mypy .

  test:
    summary: Test the package.
    deps: [activate-venv]
    cmds:
      - pytest

  build:
    summary: Build the package.
    deps: [activate-venv]
    cmds:
      - python -m build

  test-entrypoint:
    summary: |
      Integration test the package's entrypoint.

      - Install build dependencies.
      - Build package.
      - Recreate a task unique venv.
      - Explicitly install the built package wheel.
      - Use the `get` entrypoint to make a look-up against all of the example
        JSON files in: `config-chg/fixtures/`.
      - TODO - Grab console output to test the output is correct.
    dir: '{{.ROOT_DIR}}'
    deps: [install-build-deps]
    cmds:
      - rm -rf .venv_entrypoint dist
      - ls -al
      - task: install-deps
      - task: install-lint-deps
      - task: install-test-deps
      - task: build
      - python -m venv .venv_entrypoint
      - source .venv_entrypoint/bin/activate && which python
      - source .venv_entrypoint/bin/activate && pip list
      - source .venv_entrypoint/bin/activate && pip install dist/*.whl
      - source .venv_entrypoint/bin/activate && pip list
      - |
        source .venv_entrypoint/bin/activate && \
        get "database.host" \
        config-chg/fixtures/config.invalid.json \
        config-chg/fixtures/config.local.json \
        config-chg/fixtures/config.also_invalid.json \
        config-chg/fixtures/config.json

  ci-workflow:
    summary: |
      Rough CI workflow to run all CI steps with one command.

      NOTES:

        - High Risk of going out-of-sync with the CI actions!!
        - Assumes that the: `create-venv`, task has already been called!!
    deps: [activate-venv]
    cmds:
      - task: install-deps
      - task: install-lint-deps
      - task: install-test-deps
      - task: lint
      - task: test
